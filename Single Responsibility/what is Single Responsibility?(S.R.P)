Do one thing and do it well
uncle bop--A class should have one, and only one, reason to change
class should only have one responsibility. Furthermore, it should only have one reason to change.

How does this principle help us to build better software? Let's see a few of its benefits:

Testing – A class with one responsibility will have far fewer test cases.
Lower coupling – Less functionality in a single class will have fewer dependencies.
Organization – Smaller, well-organized classes are easier to search than monolithic ones
--------------------------------------------------------------------------------------------..
The Single Responsibility Principle (SRP) is the concept that any single object in object-oriented programing (OOP) 
should be made for one specific function. SRP is part of SOLID programming principles put forth by Robert Martin. 
Traditionally, code that is in keeping with SRP has a single function per class.
